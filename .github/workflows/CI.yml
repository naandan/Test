name: Publish

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

  # npm-publish:
  #   name: Publish to npm
  #   runs-on: ubuntu-latest
  #   needs: test

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "20"
  #         registry-url: "https://registry.npmjs.org"
  #     - name: Publish
  #       run: npm publish
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # release:
  #   name: Create Release
  #   runs-on: ubuntu-latest
  #   needs: test

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "20"

  #     - name: Install Dependencies
  #       run: npm install

  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
  #       with:
  #         tag_name: ${{ github.ref }}
  #         release_name: Release ${{ github.ref }}
  #         body: |
  #           Release ${{ github.ref }}
  #         draft: false
  #         prerelease: false

  # ghcr-publish:
  #   name: Publish to GitHub Container Registry
  #   runs-on: ubuntu-latest
  #   needs: test

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: "Login to GitHub Container Registry"
  #       run: |
  #         echo ${{ secrets.TOKEN_GITHUB }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

  #     - name: "Get current branch name"
  #       id: branch_name
  #       run: echo ::set-output name=BRANCH_NAME::$(echo ${GITHUB_REF#refs/heads/})

  #     - name: "Get repository name"
  #       id: repo_name
  #       run: echo ::set-output name=REPO_NAME::$(echo "${GITHUB_REPOSITORY#*/}" | awk '{print tolower($0)}')

  #     - name: "Set image tag"
  #       id: set_image_tag
  #       run: echo ::set-output name=IMAGE_TAG::ghcr.io/${{ github.repository_owner }}/${{ steps.repo_name.outputs.REPO_NAME }}:${{ steps.branch_name.outputs.BRANCH_NAME }}

  #     - name: "Build and push image"
  #       run: |
  #         docker build . --tag ${{ steps.set_image_tag.outputs.IMAGE_TAG }}
  #         docker push ${{ steps.set_image_tag.outputs.IMAGE_TAG }}

  docker-publish:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get current branch name
        id: branch_name
        run: echo ::set-output name=BRANCH_NAME::$(echo ${GITHUB_REF#refs/heads/})

      - name: Get repository name
        id: repo_name
        run: echo ::set-output name=REPO_NAME::$(echo "${GITHUB_REPOSITORY#*/}" | awk '{print tolower($0)}')

      - name: Set image tag
        id: set_image_tag
        run: echo ::set-output name=IMAGE_TAG::${{ secrets.DOCKER_USERNAME }}/${{ steps.repo_name.outputs.REPO_NAME }}:${{ steps.branch_name.outputs.BRANCH_NAME }}

      - name: Build Docker image
        run: docker build -t ${{ steps.set_image_tag.outputs.IMAGE_TAG }} .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ steps.set_image_tag.outputs.IMAGE_TAG }}
